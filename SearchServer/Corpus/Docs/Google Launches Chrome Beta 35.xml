<?xml version="1.0" encoding="UTF-8" standalone="no"?><Article><Title>Google Launches Chrome Beta 35</Title><Url>http://techcrunch.com/2014/04/10/google-launches-chrome-beta-35/</Url><Content>Google today released the latest beta version of Chrome 35. While there aren’t any major new features for end users in this release, the company added a wide range of new functionality for developers to its browser that will make web apps running in Chrome better in the long run. The features users will likely notice first once developers implement it is support for a number of new properties for touch and zoom input. With the help of the new touch-action CSS property, for example, developers can now disable touch scrolling, pinch-zooming and double-tap zooming on parts of their content. Google says this will give developers more control over the often annoying 300-millisecond click delay on mobile and allow them to create more reliable side-swipe UIs and polyfills of Pointer Events. For desktop users, the release introduces a system that allows web apps to receive mouse scroll wheel events when the Control key is pressed. Right now, when you use the scroll wheel and hold down Control, Chrome will zoom in and out of the page. For some sites, including Google Maps, that’s not the right behavior, so developers can now invoke other actions based on this input. Google also unprefixed access to the Shadow DOM in this release. Shadow DOM is an essential feature for Web Components to work. According to Google, it “brings reliable composition of user interface elements to the web platform” and allows developers and web frameworks to “stop worrying about their widgets inadvertently breaking pages by using conflicting CSS selectors, class or IDs, and start relying on DOM as the interoperable way of building components.“ Also new in this update is support for a number of new JavaScript features under the ECMAScript 6 standard. JavaScript is the best-known implementation of this standard, and ECMASCript 6 is due for release at the end of the year. Google has already started to implement some of its features, though, including support for things like JavaScript promises (a feature similar to JQuery’s Deferreds), WeakMaps and WeakSets for creating garbage-collected data structures and object.observe for observing changes to JavaScript objects. This release, however is not just about adding features. Google is also removing a number of features. It’s doing so to simplify its codebase and minimize attack surfaces, but the company says deprecations are mostly about evolving the web API surface “to address the needs of today’s users and developers.” Among the deprecated features in this release are legacy web notifications and NPAPI support on Linux. You can find a full list here. Image credit: swskeptic under CC BY-SA 2.0 license.</Content></Article>