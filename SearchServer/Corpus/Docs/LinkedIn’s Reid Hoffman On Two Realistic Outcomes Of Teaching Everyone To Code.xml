<?xml version="1.0" encoding="UTF-8" standalone="no"?><Article><Title>LinkedIn’s Reid Hoffman On Two Realistic Outcomes Of Teaching Everyone To Code</Title><Url>http://techcrunch.com/2013/10/16/linkedins-reid-hoffman-on-two-realistic-outcomes-of-teaching-everyone-to-code/</Url><Content>On a regular basis, we get pitched with major tech industry initiatives to broaden computer science education. A day after Mark Zuckerberg and Bill Gates signed on to a new initiative from Code.org to inspire 10 million new computer programmers, education startup General Assembly launched a tool for self-taught coding. And, just a few weeks earlier, Square CEO Jack Dorsey sat down with House Minority leader, Nancy Pelosi, to chat about a new “coding camp” for young girls. But after everyone and their mother can code if-then loops, then what? There are many college-trained computer programmers who never use their coding skills and a sizable share of CS majors who can’t get hired in Silicon Valley. Who caught up with LinkedIn Co-Founder and nice-guy enthusiast, Reid Hoffman, at the Code.org launch event to ask about why he was supporting their initiative. He has some refreshingly realistic ideas about what happens when everyone can code. 1. All Employees Could Be Capable Of Building Tech Solutions “It’s not that everyone will have the skills for a high performing job.” he says. “Software skills are useful in every industry, not just for being hired by LinkedIn.” The more people who hand-code their own solutions, the more cool projects we’ll see. Even in the slumbering luddite of the U.S. Congress, Representative Darrell Issa was able to launch a novel crowdsourcing legislative utility, Project Madison, because he and his staff could code a rough version of it without worry about hiring developers. Who knows how many ideas never happen because an inventor can’t create a prototype themselves. Universal computer science education won’t solve Silicon Valley’s perpetual tech-talent shortage, but it will make us a more innovative society. 2. More Social Good Tech. “If I hadn’t have gone to Stanford, I probably wouldn’t have become a software entrepreneur,” says Hoffman, who remembers always having a world-changing orientation, but never considered technology as a pathway to making an impact. Being embedded in Xerox PARC gave him the epiphany that technology could allow a friend tutoring in East Palo Alto to reach many more students. He never developed the tutoring software, but it did inspire him to get into large-scale tech projects. The same goes for other inventors. Seventeen-year-old Brittany Wenger recently designed a new low-cost way to radically improve cancer-detection rates using artificial intelligence and databases. “I came across artificial intelligence and was just enthralled. I went home the next day and bought a programming book and decided that was what I was going to teach myself to do,” she explained. Without exposure to technology, this cool stuff simply doesn’t happen. Silicon Valley has to be a little realistic about the mathematical prowess of the average American. Forty-seven percent of U.S. college students failed questions on rudimentary algebra fractions. The Logical notation of programming, which is much more complex, might be a bit out of reach. Even if we could accomplish the monumental task of transforming the K-12 education system to teach all students anything new, only a fraction of students would actually use it. That said, it only takes a fraction of computer-science-literate students to come up with some super cool stuff, and that, alone, is worth the effort.</Content></Article>